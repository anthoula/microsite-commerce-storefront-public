name: Lighthouse Audit
on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  lhci:
    name: Run Lighthouse
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.17.1

      - name: Install Dependencies
        run: npm install

      - name: Build Site
        run: npm run build

      - name: Install Lighthouse CLI
        run: npm install -g @lhci/cli@0.13.0

      - name: Run Lighthouse CLI
        run: lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Add Lighthouse Results
        uses: actions/github-script@v5
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const reportPath = './.lighthouseci'; // Adjust based on where your reports are saved
            let commentBody = '### Lighthouse Results\n';

            // Check if the directory exists
            if (fs.existsSync(reportPath)) {
              const files = fs.readdirSync(reportPath);
              // Ensure there are files to process
              if (files && files.length > 0) {
                files.forEach(file => {
                  if (path.extname(file) === '.json') {
                    const report = JSON.parse(fs.readFileSync(path.join(reportPath, file)));
                    console.log(report);
                    const url = report.requestedUrl;
                    commentBody += `**URL:** ${url}\n`;

                    // Correctly accessing categories
                    Object.keys(report.categories).forEach((categoryKey) => {
                      const category = report.categories[categoryKey];
                      commentBody += `**${category.title}:** ${Math.round(category.score * 100)}\n`;
                    });

                    commentBody += '\n';
                  }
                });
              } else {
                commentBody += 'No Lighthouse reports found.\n';
              }
            } else {
              commentBody += 'Lighthouse reports directory does not exist.\n';
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody,
            })
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
