---
import Icon from './Icon.astro'; // local component override of Icon
import type { Icons } from './Icons'; // local component override of Icons
import { setBasePath } from '@utils/basePath';

interface Props {
  variant: 'primary' | 'secondary' | 'minimal' | 'discord' | 'header' | 'sidebar';
  link: string;
  icon?: undefined | { type: 'icon'; name: keyof typeof Icons } | { type: 'raw'; html: string };
  small?: string;
}

const { variant, link, icon } = Astro.props;
---

<a
  class:list={['sl-flex action', variant]}
  href={link.startsWith('https://') ? link : setBasePath(link)}
>
  <slot />
  {icon?.type === 'icon' && <Icon name={icon.name} size="1.5rem" />}
  {icon?.type === 'raw' && <Fragment set:html={icon.html} />}
</a>

<style>
  .action {
    gap: 0.5em;
    align-items: center;
    border-radius: 999rem;
    padding: 0.5rem 1.125rem;
    color: var(--sl-color-white);
    line-height: 1.1875;
    text-decoration: none;
    font-size: var(--sl-text-sm);
  }
  .action.primary {
    background: var(--sl-color-text-accent);
    color: var(--sl-color-black);
  }
  .action.secondary {
    border: 1px solid;
  }
  .action.minimal {
    background: var(--sl-color-discord);
    color: var(--sl-color-black);
  }
  .action.discord {
    background: var(--sl-color-discord);
    color: var(--sl-color-black);
  }
  .action.header {
    background: var(--sl-color-text-accent);
    color: var(--sl-color-black);
    padding: 0.6rem 0.75rem;
    font-size: var(--sl-text-sm);
  }

  .action.sidebar {
    background: var(--sl-color-text-accent);
    color: var(--sl-color-black);
    padding: 0.6rem 0.75rem;
    font-size: var(--sl-text-sm);
    width: 100px;
    margin-top: 0.5rem;
    text-align: center;
  }

  @media (min-width: 50rem) {
    .action {
      font-size: var(--sl-text-base);
      padding: 1rem 1.25rem;
    }
  }
</style>
