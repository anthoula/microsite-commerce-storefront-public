---
interface Props {
  square?: boolean;
}

const { square } = Astro.props;
const radius = square ? 0 : '99rem';
---

<div class="ac-step">
  <slot />
</div>

<style is:global define:vars={{ radius }}>
  .ac-step.ac-step {
    --bullet-size: 2.5rem;
    border-radius: 0.5rem;
    border: 1px solid var(--sl-color-gray-5);
    background-color: var(--sl-color-gray-8);
    color: var(--sl-color-gray-1);
    margin-top: 2rem;
    margin-bottom: 2rem;
    margin-left: -1rem;
    overflow-wrap: break-word;
    padding-left: 1rem;
    padding-right: 1rem;
    padding-bottom: 1rem;
    /* box-shadow: 0 0 6px 1px var(--sl-color-gray-5); */
  }

  .ac-step.ac-step > ol {
    color: var(--sl-color-gray-1);
    padding-left: 1rem;
  }

  .ac-step.ac-step > h3 {
    counter-increment: step;
    color: var(--sl-color-gray-1);
    line-height: 1;
    padding-left: 0;
    margin-bottom: 0.5rem;
  }

  .ac-step.ac-step > h3::before {
    content: counter(step);
    display: inline-block;
    border: 6px solid var(--sl-color-black);
    text-align: center;
    vertical-align: middle;
    border-radius: var(--radius);
    font-size: 1rem;
    height: var(--bullet-size);
    width: var(--bullet-size);
    line-height: 1.6rem;
    color: var(--sl-color-gray-2);
    background-color: var(--sl-color-gray-6);
    box-shadow: inset 0 0 0 1px var(--sl-color-gray-5);
    margin-left: -2.25rem;
    margin-right: -0.25rem;
    margin-top: -3.75rem;
  }
</style>
