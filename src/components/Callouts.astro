---
interface Props {
  square?: boolean;
  color?: string;
}

const { square } = Astro.props;
const radius = square ? 0 : '99rem';
---

<div class="callouts">
  <slot />
</div>

<style is:global define:vars={{ radius }}>
  .callouts.callouts {
    column-count: 2;
    column-gap: 1.5rem;
    padding-top: 1rem;
    overflow-wrap: break-word;
  }

  .callouts ol {
    padding-inline-start: 0;
    margin-top: 0;
  }

  .callouts ol li {
    position: relative;
    padding-inline-start: 2.25rem;
    padding-bottom: 0.25rem;
    list-style: none;
    counter-increment: list-item;
    color: var(--sl-color-gray-1);
    letter-spacing: -0.02rem;
    min-height: calc(var(--bullet-size) + var(--bullet-margin));
    break-inside: avoid-column;
    text-wrap: balance;
  }

  .callouts ol li::before {
    --bullet-size: 1.5rem;
    --bullet-margin: 0.25rem;
    position: absolute;
    content: counter(list-item);
    line-height: 1.4;
    font-size: 1rem;
    font-weight: 700;
    text-align: center;
    color: var(--sl-color-black);
    background-color: var(--sl-color-white);
    border-radius: var(--radius);
    margin-left: -2rem;
    margin-right: var(--bullet-margin);
    margin-top: 0;
    width: var(--bullet-size);
    height: var(--bullet-size);
  }

  @media only screen and (max-width: 600px) {
    .callouts.callouts {
      column-count: 1;
    }
  }
</style>
