const h=function(){const r=typeof document<"u"&&document.createElement("link").relList;return r&&r.supports&&r.supports("modulepreload")?"modulepreload":"preload"}(),v=function(i){return"/"+i},f={},E=function(r,a,m){let u=Promise.resolve();if(a&&a.length>0){const o=document.getElementsByTagName("link"),n=document.querySelector("meta[property=csp-nonce]"),d=n?.nonce||n?.getAttribute("nonce");u=Promise.all(a.map(e=>{if(e=v(e),e in f)return;f[e]=!0;const s=e.endsWith(".css"),p=s?'[rel="stylesheet"]':"";if(!!m)for(let c=o.length-1;c>=0;c--){const l=o[c];if(l.href===e&&(!s||l.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${e}"]${p}`))return;const t=document.createElement("link");if(t.rel=s?"stylesheet":h,s||(t.as="script",t.crossOrigin=""),t.href=e,d&&t.setAttribute("nonce",d),document.head.appendChild(t),s)return new Promise((c,l)=>{t.addEventListener("load",c),t.addEventListener("error",()=>l(new Error(`Unable to preload CSS for ${e}`)))})}))}return u.then(()=>r()).catch(o=>{const n=new Event("vite:preloadError",{cancelable:!0});if(n.payload=o,window.dispatchEvent(n),!n.defaultPrevented)throw o})};export{E as _};
